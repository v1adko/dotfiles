{
	// Place your snippets for JavaScript here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	"Deep equal assert": {
		"prefix": "ee",
		"body": [
			"expect($1).toEqual({});"
		],
		"description": "Deep equal assertion"
	},
	"Equal assert": {
		"prefix": "eb",
		"body": [
			"exect($1).toBe($2);"
		],
		"description": "Equality assertion"
	},
	"Import a library": {
		"prefix": "imp",
		"body": [
			"import $1 from '$1';",
			"$1"
		],
		"description": "Import a library"
	},
	"Create new Promise": {
		"prefix": "np",
		"body": [
			"new Promise((resolve, reject) => {$1});"
		],
		"description": "New Promise"
	},
	"Return new Promise": {
		"prefix": "rnp",
		"body": [
			"return new Promise((resolve, reject) => {$1});"
		],
		"description": "Return new promise"
	},
	"Default callback handler": {
		"prefix": "dcb",
		"body": [
			"(err, res) => (!err) ? resolve(res) : reject(err))"
		],
		"description": "Default callback handler"
	},
	"Async test": {
		"prefix": "at",
		"body": [
			"it('$1', async () => {$2});"
		],
		"description": "Async test"
	},
	"Async only test": {
		"prefix": "aot",
		"body": [
			"it.only('$1', async () => {$2})"
		],
		"description": "Async only test"
	},
  "Log": {
		"prefix": "cl",
		"body": [
			"console.log($1);"
		],
		"description": "Console log"
	},
	"Log 'Here'": {
		"prefix": "clh",
		"body": [
			"console.log('Here$1');"
		],
		"description": "Logs 'Here' to console"
  },
  // React
  "Import styled-components": {
		"prefix": "isc",
		"body": [
			"import styled from 'styled-components';",
			"$1"
		],
		"description": "Import styled-components library"
	}
}
